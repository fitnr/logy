<?php/** static class of logging functions* these should work for any twitter bot or cron job*/class logger{	# holds the text	public static $output;	# higher is more verbose	static public $log_level = 2;	# destination for these wonderful tidbits  static public $log_file;	static public $log_sender;	static private $log_recipient = "fake is the new real <postmaster@fakeisthenewreal.org>";	  public static function log($str, $level=2) {		# compare passed log level to that defined in the class    if ($level <= self::$log_level)      self::$output .= date("\ny-m-d H:i:s\t") . $str;  }   	public static function save_log() {	# need non-empty output and a proper file opening	 if ($fh = fopen(self::$log_file, "a")) :	   fwrite($fh, self::$output);	   fclose($fh);	   self::$output = "";	   return true;	else :		error_log("\nError saving log: " . self::report_err() . self::$output, 3, self::$log_file);	endif;			 }  	# $e should be array generated by error_get_last()	private static function report_err($e = NULL) { 		if ($e === NULL)			$e = error_get_last();		return sprintf("Type %s on line %s of %s: %s",	$e['type'],	$e['line'],$e['file'],$e['message']);			}		private static function get_logfile() {		return file_get_contents(self::$log_file);	}		#delete the log  private static function truncate_log() {     $f = fopen(self::$log_file,'w');    if ($f === false)      throw new Exception("error truncating log file");  }	#send off the log  private static function emailer($log) {     $headers  = "From: " . self::$log_sender . "\r\n";    $headers .= "X-Mailer:PHP " . phpversion() . "\r\n";    $headers .= "Content-type:text/plain; charset=UTF-8";    if (mail(self::$log_recipient, self::$log_file . " report", $log, $headers)):      #do nothing    else :      throw new Exception("Error mailing the log.");    endif;  }	/*	* args:	*		day: day of week e.g. Monday	* 	hour: hour on 24 hour scale, e.g. 13 for 1 pm, 0 for midnight	* output:	* 	email sent to 	*/		public static function email_log($day, $hour) {		if ( date('l') == $day && date('G') == $hour ) :			try {				$log = self::get_logfile();				self::emailer($log . self::$output);				self::$output = "";				self::truncate_log();			} catch(Exception $e) {				# useful if server is set to email any result.				echo self::$output;				echo $e->getMessage();			}		endif;	}}?>